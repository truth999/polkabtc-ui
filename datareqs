- Total issued on given days/blocks
 -> total issues by the last X days; total issued on any of the given days
- Total issue requests (no need for per-day?)

- Total collateral locked on given days/blocks
 -> total collateral locked on any given day; difference in collateral locked between days

- Total staked on given days/blocks
 -> total collateral locked on any given day

- Total redeemed on given days/blocks
 -> total redeemed by the last X days; total redeemed on any of the given days
- Total redeem requests
- Redeem failures and successes -> success rate

- Total fees on given days/blocks

- Number of active vaults on given days/blocks
- Number of active staked relayers on given days/blocks
- Number of active collators (??) on given days/blocks

 - Last BTCRelay blocks; list of relayers
 - Last Oracle updates; list of oracles

/cumulative/
  /issues/blockheight
  /collateral/blockheight
  /staked/blockheight
  /redeemed/blockheight
  /fees/blockheight
/active/
  /vaults/blockheight
  /stakedrelayers/blockheight
  /collators/blockheight


TODO:
 - skeleton pages with skeleton tables and chart placeholders
  - DONE issue
  - DONE redeem
  - DONE vaults
  - oracles
  - BTC
  - parachain

 - skeleton API app with mock data
 - generate app client (=lib for UI)

 - add table sorting

 then populate API with actual data
 populate pages with actual stats
